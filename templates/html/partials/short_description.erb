<li>
	<h4 id="<%= dom_id(object) %>">
		<%= object.name %>
		<span><a href="<%= path_to(object) %>">#</a></span>
	</h4>
	<% if object.signature %>
		<%= method_synopsis(object) %>
	<% end %>
	<% if object.is_a?(Documentation::Method) %>
		<% unless object.arguments.empty? %>
			<ul class="arguments">
				<% object.arguments.each do |arg| %>
					<li>
						<code><%= arg.name %></code>
						<% unless arg.types.empty? %>
							(<%= arg.types.map { |t| auto_link_code(t, false) }.join(' | ') %>)
						<% end %>
						<%= ' &ndash; ' + inline_htmlize(arg.description) unless arg.description.empty? %>
					</li>
				<% end %>
			</ul>
		<% end %>
	<% end %>
	<%= htmlize(object.description) %>
	<% unless object.aliases.empty? %>
		<p class="note alias">Aliased as: <%= object.aliases.map { |a| auto_link_code(a, false) }.join(', ') %></p>
	<% end %>
	<% if object.alias? %>
		<p class="note alias">Alias of: <%= auto_link_code(object.alias_of, false) %></p>
	<% end %>
	<% if object.is_a?(Documentation::Utility) && object.related_to %>
		<p class="note related">Related to: <%= auto_link_code(object.related_to, false) %></p>      
	<% end %>
	<% if object.is_a?(Documentation::Method) && object.methodized? %>
		<p class="note information">This method can be called <em>either</em> as an instance method <em>or</em> as a generic method. If calling as a generic, pass the instance in as the first argument.</p>
	<% end %>
</li>