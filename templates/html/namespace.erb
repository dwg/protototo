<%
	d = @doc_instance
	@title = "#{d.full_name} #{d.type}"
%>
<h2>
  <span><%= d.type %></span> <%= d.full_name %>
</h2>
<% if d.description && !d.description.empty? %>
	<div class="section">
		<h3 class="description">Description</h3>
		<%= htmlize(d.description) %>
	</div>
<% end %>
<% if d.is_a?(Documentation::Klass) %>
	<% if d.superklass %>
		<div class="section">
			<h3 class="superclass">Superclass</h3>
			<p><%= auto_link_code(d.superklass, false) %></p>     
		</div>    
	<% end %>
	<% unless d.subklasses.empty? %>
		<div class="section">
			<h3 class="subclass">Subclasses</h3>     
			<p><%= d.subklasses.map { |s| auto_link_code(s, false) }.join(', ') %></p>     
		</div>    
	<% end %>
<% end %>
<% unless d.mixins.compact.empty? %>
	<div class="section">
		<h3 class="mixin">Includes</h3>      
		<p><%= d.mixins.map { |m| auto_link_code(m, false) }.join(', ') %></p>      
	</div>
<% end %>
<% unless d.related_utilities.empty? %>
	<div class="section">
		<h3 class="utility">Related utilities</h3>      
		<p><%= d.related_utilities.map { |u| auto_link_code(u, false) }.join(', ') %></p>      
	</div>
<% end %>
<% unless d.all_methods.empty? && d.mixins.empty? %>
	<div class="section">
		<h3 class="method">Methods</h3>
		<ul class="methods">
			<% d.all_methods.each do |method| %>
				<li><%= auto_link_code(method, true, :class => class_names_for(method)) %></li>
			<% end %>
		</ul>
		<% unless d.mixins.compact.empty? %>
			<% d.mixins.each do |mixin| %>
	      		<h4 class="inherited">Inherited from <%= auto_link(mixin) %></h4>
				<ul class="methods">
					<% mixin.all_methods.each do |method| %>
						<li><%= auto_link_code(method, true, :class => class_names_for(method)) %></li>
					<% end %>
				</ul>
			<% end %>
		<% end %>
	</div>
<% end %>
<% if d.is_a?(Documentation::Klass) && d.constructor %>
	<div class="section">
		<h3 class="constructor">Constructor</h3>
		<pre id="<%= dom_id(d.constructor) %>"><code class="ebnf"><%= d.constructor.ebnf_expressions.join("\n").strip %></code></pre>
		<% unless d.constructor.arguments.empty? %>
			<ul class="arguments">
				<% d.constructor.arguments.each do |arg| %>
					<li>
						<code><%= arg.name %></code>
						<% unless arg.types.empty? %>
							(<%= arg.types.map { |t| auto_link_code(t, false) }.join(' | ') %>)
						<% end %>
						<%= ' &ndash; ' + inline_htmlize(arg.description) unless arg.description.empty? %>
					</li>
				<% end %>
			</ul>
		<% end %>
		<%= htmlize(d.constructor.description) %>
	</div>
<% end %>
<%
types = {
  :constants           => ["Constants", "constant"],
  :klass_methods       => ["Class methods", "class_method"],
  :klass_properties    => ["Class properties", "class_property"],
  :instance_methods    => ["Instance methods", "instance_method"],
  :instance_properties => ["Instance properties", "instance_property"]  
}
%>
<% types.each do |method, properties| %>
	<% methods = d.send(method) %>
	<% unless methods.empty? %>
		<div class="section">
			<h3 class="<%= properties.last %>"><%= properties.first %></h3>
			<ul class="methods">
				<%= include "partials/short_description", :collection => methods %>
			</ul>
		</div>
	<% end %>
<% end %>